{"version":3,"sources":["webpack:///bundle.min.js","webpack:///webpack/bootstrap ca24672c9dc4c2f675a1?12dc","webpack:///./scripts/script.js?3b3a"],"names":["modules","__webpack_require__","moduleId","installedModules","exports","module","id","loaded","call","m","c","p","generatePattern","$","animate","scrollTop","window","innerHeight","generationInProgress","initiateGeneration","container","document","getElementById","innerHTML","generations","parseInt","value","totalRows","generateFirstRow","startEvolutionDelay","genDelay","totalCols","setTimeout","generateNewRow","row","createElement","className","colourType","middleCell","Math","ceil","oddCols","i","cell","style","backgroundColor","randomColour","animateFirstRow","appendChild","colNum","evenOffset","type","state","randNumber","max","floor","random","rowNum","fragment","createDocumentFragment","parent1col","parent2col","parent3col","childRGB","map","column","parent","getRGB","reduce","accumulator","parentRGB","R","G","B","cloneNode","cssRgb","substring","indexOf","split","x","evolveButtons","querySelectorAll","length","addEventListener","event","scrollY","transform"],"mappings":"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","file":"bundle.min.js","sourcesContent":["/******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\tvar totalRows = 60; // integer\n\tvar totalCols = 100; // integer\n\tvar genDelay = 50; // ms\n\tvar generationInProgress = false;\n\t\n\tvar evolveButtons = document.querySelectorAll('.btn-evolve');\n\tfor (var i = 0; i < evolveButtons.length; i++) {\n\t\tevolveButtons[i].addEventListener('click', generatePattern, false);\n\t} // Click handler for Evolve button\n\tfunction generatePattern() {\n\t\t$('html, body').animate({ 'scrollTop': window.innerHeight }, 600);\n\t\n\t\tif (!generationInProgress) {\n\t\t\tgenerationInProgress = true;\n\t\t\tinitiateGeneration();\n\t\t}\n\t}\n\t\n\t// Initiates the pattern generation\n\tfunction initiateGeneration() {\n\t\tvar container = document.getElementById('pattern-container');\n\t\tcontainer.innerHTML = '';\n\t\n\t\t// Set number of generations\n\t\tvar generations = parseInt(document.getElementById('sel-numGenerations').value);\n\t\tif (generations >= 1 && generations <= 1000) totalRows = generations;\n\t\n\t\t// Generate first row\n\t\tgenerateFirstRow(container);\n\t\n\t\t// Generate the children\n\t\tvar startEvolutionDelay = genDelay / 2 * (totalCols / 2) + genDelay * 10;\n\t\tsetTimeout(function () {\n\t\t\treturn generateNewRow(2, container);\n\t\t}, startEvolutionDelay);\n\t}\n\t\n\t// Generate the first row of cells\n\tfunction generateFirstRow(container) {\n\t\tvar row = document.createElement('div');\n\t\trow.className = 'cell-row';\n\t\trow.id = 'row1';\n\t\n\t\tvar colourType = document.getElementById('sel-colourPalette').value;\n\t\n\t\t// variables to calculate animation properties\n\t\tvar middleCell = Math.ceil(totalCols / 2);\n\t\tvar oddCols = totalCols % 2 !== 0;\n\t\n\t\tfor (var _i = 1; _i <= totalCols; _i++) {\n\t\t\tvar cell = document.createElement('div');\n\t\t\tcell.className = 'cell firstRow-cell';\n\t\t\tcell.id = 'row1-col' + _i;\n\t\n\t\t\tcell.style.backgroundColor = randomColour(colourType); // Assign cell colour\n\t\t\tcell.style['animation-delay'] = animateFirstRow(_i - 1, middleCell, oddCols); // Assign cell animation-delay\n\t\n\t\t\trow.appendChild(cell);\n\t\t}\n\t\tcontainer.appendChild(row);\n\t}\n\t\n\t// Assigns the cell an appropriate animation-delay value to display as a 'middle out' animation\n\tfunction animateFirstRow(colNum, middleCell, oddCols) {\n\t\tvar evenOffset = oddCols ? 0 : -1; // even cols in total means an extra middle cell, so requires extra increment\n\t\n\t\tif (colNum < middleCell) return (totalCols - middleCell + evenOffset - colNum) * genDelay / 2 + 'ms';else return (middleCell - (totalCols - colNum)) * genDelay / 2 + 'ms';\n\t}\n\t\n\t// Return a random RGB colour\n\tfunction randomColour(type) {\n\t\t// Type: mono (for black and white)\n\t\tif (type === 'mono') {\n\t\t\tvar state = randNumber(1);\n\t\t\tif (state === 0) return 'rgb(255,255,255)';else return 'rgb(0,0,0)';\n\t\t}\n\t\t// Type: primary (for either R, G, B primary colours)\n\t\telse if (type === 'primary') {\n\t\t\t\tvar _state = randNumber(2);\n\t\t\t\tif (_state === 0) return 'rgb(255,0,0)';else if (_state === 1) return 'rgb(0,255,0)';else return 'rgb(0,0,255)';\n\t\t\t}\n\t\t\t// Type: all (completely random colour)\n\t\t\telse if (type === 'all') {\n\t\t\t\t\treturn 'rgb( ' + randNumber(255) + ', ' + randNumber(255) + ', ' + randNumber(255) + ' )';\n\t\t\t\t}\n\t}\n\t\n\t// Returns random number 0 <= x <= max\n\tfunction randNumber(max) {\n\t\treturn Math.floor(Math.random() * (max + 1));\n\t}\n\t\n\t// Generate a new child row\n\tfunction generateNewRow(rowNum, container) {\n\t\tvar fragment = document.createDocumentFragment();\n\t\n\t\tvar row = document.createElement('div');\n\t\trow.className = 'cell-row';\n\t\trow.id = 'row' + rowNum;\n\t\n\t\t// Create Row\n\t\tfor (var _i2 = 1; _i2 <= totalCols; _i2++) {\n\t\t\tvar cell = document.createElement('div');\n\t\t\tcell.className = 'cell';\n\t\n\t\t\t// Get parent columns (with wrap)\n\t\t\tvar parent1col = _i2 == 1 ? totalCols : _i2 - 1;\n\t\t\tvar parent2col = _i2;\n\t\t\tvar parent3col = _i2 == totalCols ? 1 : _i2 + 1;\n\t\n\t\t\tvar childRGB = [parent1col, parent2col, parent3col].map(function (column) {\n\t\t\t\treturn document.getElementById('row' + (rowNum - 1) + '-col' + column);\n\t\t\t}) // get parent elements\n\t\t\t.map(function (parent) {\n\t\t\t\treturn getRGB(parent.style.backgroundColor);\n\t\t\t}) // get parent background colours\n\t\t\t.reduce(function (accumulator, parentRGB) {\n\t\t\t\t// reduce to average RGB of all parents\n\t\t\t\treturn {\n\t\t\t\t\tR: accumulator.R + parentRGB.R / 3,\n\t\t\t\t\tG: accumulator.G + parentRGB.G / 3,\n\t\t\t\t\tB: accumulator.B + parentRGB.B / 3\n\t\t\t\t};\n\t\t\t}, { R: 0, G: 0, B: 0 });\n\t\n\t\t\t// set child cell properties\n\t\t\tcell.style.backgroundColor = 'rgb( ' + Math.floor(childRGB.R) + ', ' + Math.floor(childRGB.G) + ', ' + Math.floor(childRGB.B) + ' )';\n\t\t\tcell.id = 'row' + rowNum + '-col' + _i2;\n\t\n\t\t\tfragment.appendChild(cell);\n\t\t}\n\t\n\t\trow.appendChild(fragment.cloneNode(true));\n\t\tcontainer.appendChild(row);\n\t\n\t\t// Generate the next row after a delay\n\t\tif (rowNum < totalRows) setTimeout(function () {\n\t\t\treturn generateNewRow(rowNum + 1, container);\n\t\t}, genDelay);else generationInProgress = false;\n\t}\n\t\n\t// Get the RGB values of a cell\n\tfunction getRGB(cssRgb) {\n\t\t// Get in form { R, G, B }\n\t\tcssRgb = cssRgb.substring(cssRgb.indexOf('(') + 1, cssRgb.indexOf(')')).split(', ').map(function (x) {\n\t\t\treturn parseInt(x);\n\t\t});\n\t\n\t\treturn { R: cssRgb[0], G: cssRgb[1], B: cssRgb[2] };\n\t}\n\t\n\t// Show/hide header after scrolling\n\twindow.addEventListener('scroll', function (event) {\n\t\tif (window.scrollY > window.innerHeight * 0.6) document.getElementById('control-panel').style.transform = 'translateY(0)';else document.getElementById('control-panel').style.transform = 'translateY(-100%)';\n\t}, false);\n\n/***/ }\n/******/ ]);\n\n\n// WEBPACK FOOTER //\n// bundle.min.js"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap ca24672c9dc4c2f675a1","'use strict';\n\nlet totalRows = 60;\t\t// integer\nlet totalCols = 100;\t// integer\nlet genDelay = 50;\t\t// ms\nlet generationInProgress = false;\n\nlet evolveButtons = document.querySelectorAll('.btn-evolve');\nfor (let i=0; i<evolveButtons.length; i++) evolveButtons[i].addEventListener('click', generatePattern, false);\n\n// Click handler for Evolve button\nfunction generatePattern() {\n\t$('html, body').animate({ 'scrollTop': window.innerHeight }, 600);\n\t\n\tif (!generationInProgress) {\n\t\tgenerationInProgress = true;\n\t\tinitiateGeneration();\t\n\t}\n}\n\n// Initiates the pattern generation\nfunction initiateGeneration() {\n\tlet container = document.getElementById('pattern-container');\n\tcontainer.innerHTML = '';\n\t\t\n\t// Set number of generations\n\tlet generations = parseInt(document.getElementById('sel-numGenerations').value);\n\tif (generations >= 1 && generations <= 1000) totalRows = generations;\n\t\t\n\t// Generate first row\n\tgenerateFirstRow(container);\n\n\t// Generate the children\n\tvar startEvolutionDelay = (genDelay/2)*(totalCols/2) + genDelay*10;\n\tsetTimeout(() => generateNewRow(2, container), startEvolutionDelay);\n}\n\n// Generate the first row of cells\nfunction generateFirstRow(container) {\n\tlet row = document.createElement('div');\n\trow.className = 'cell-row';\n\trow.id = 'row1';\n\t\n\tlet colourType = document.getElementById('sel-colourPalette').value;\n\t\n\t// variables to calculate animation properties\n\tlet middleCell = Math.ceil(totalCols/2);\n\tlet oddCols = (totalCols % 2) !== 0;\n\n\tfor (let i=1; i<=totalCols; i++) {\n\t\tlet cell = document.createElement('div');\n\t\tcell.className = 'cell firstRow-cell';\n\t\tcell.id = 'row1-col' + i;\n\t\t\n\t\tcell.style.backgroundColor = randomColour(colourType); // Assign cell colour\n\t\tcell.style['animation-delay'] = animateFirstRow(i-1, middleCell, oddCols); // Assign cell animation-delay\n\t\t\n\t\trow.appendChild(cell);\n\t}\t\n\tcontainer.appendChild(row);\n}\n\n// Assigns the cell an appropriate animation-delay value to display as a 'middle out' animation\nfunction animateFirstRow(colNum, middleCell, oddCols) {\n\tlet evenOffset = oddCols ? 0 : -1;\t// even cols in total means an extra middle cell, so requires extra increment\n\t\n\tif (colNum < middleCell) return ((totalCols - middleCell+evenOffset) - colNum)*genDelay/2 + 'ms';\n\telse return (middleCell - (totalCols - colNum))*genDelay/2 + 'ms';\n}\n\n// Return a random RGB colour\nfunction randomColour(type) {\n\t// Type: mono (for black and white)\n\tif (type === 'mono') {\n\t\tlet state = randNumber(1);\n\t\tif (state === 0) return 'rgb(255,255,255)';\n\t\telse return 'rgb(0,0,0)';\n\t}\n\t// Type: primary (for either R, G, B primary colours)\n\telse if (type === 'primary') {\n\t\tlet state = randNumber(2);\n\t\tif (state === 0) return 'rgb(255,0,0)';\n\t\telse if (state === 1) return 'rgb(0,255,0)';\n\t\telse return 'rgb(0,0,255)';\n\t}\n\t// Type: all (completely random colour)\n\telse if (type === 'all') {\n\t\treturn `rgb( ${randNumber(255)}, ${randNumber(255)}, ${randNumber(255)} )`;\n\t}\n}\n\n// Returns random number 0 <= x <= max\nfunction randNumber(max) {\n\treturn Math.floor(Math.random() * (max+1));\n}\n\n// Generate a new child row\nfunction generateNewRow(rowNum, container) {\n\tlet fragment = document.createDocumentFragment();\n\t\n\tlet row = document.createElement('div');\n\trow.className = 'cell-row';\n\trow.id = 'row'+rowNum;\n\t\n\t// Create Row\n\tfor (let i=1; i<=totalCols; i++) {\n\t\tlet cell = document.createElement('div');\n\t\tcell.className = 'cell';\n\t\t\n\t\t// Get parent columns (with wrap)\n\t\tlet parent1col = (i == 1) ? totalCols : i-1;\n\t\tlet parent2col = i;\n\t\tlet parent3col = (i == totalCols) ? 1 : i+1;\n\t\n\t\tlet childRGB = [parent1col, parent2col, parent3col]\n\t\t\t.map(column => document.getElementById('row'+(rowNum-1)+'-col'+column))\t// get parent elements\n\t\t\t.map(parent => getRGB(parent.style.backgroundColor))\t\t\t\t\t\t\t\t\t\t// get parent background colours\n\t\t\t.reduce((accumulator, parentRGB) => {\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// reduce to average RGB of all parents\n\t\t\t\t\treturn {\n\t\t\t\t\t\tR: accumulator.R + (parentRGB.R/3),\n\t\t\t\t\t\tG: accumulator.G + (parentRGB.G/3),\n\t\t\t\t\t\tB: accumulator.B + (parentRGB.B/3)\n\t\t\t\t\t}\n\t\t\t\t}, {R:0, G:0, B:0});\n\t\t\n\t\t// set child cell properties\n\t\tcell.style.backgroundColor = `rgb( ${Math.floor(childRGB.R)}, ${Math.floor(childRGB.G)}, ${Math.floor(childRGB.B)} )`;\t\n\t\tcell.id = 'row' + rowNum + '-col' + i;\n\t\t\n\t\tfragment.appendChild(cell);\n\t}\n\t\n\trow.appendChild(fragment.cloneNode(true));\n\tcontainer.appendChild(row);\n\t\n\t// Generate the next row after a delay\n\tif (rowNum < totalRows) setTimeout(() => generateNewRow(rowNum+1, container), genDelay);\n\telse generationInProgress = false;\n}\n\n// Get the RGB values of a cell\nfunction getRGB(cssRgb) {\n\t// Get in form { R, G, B }\n\tcssRgb = cssRgb\n\t\t.substring(cssRgb.indexOf('(')+1, cssRgb.indexOf(')'))\n\t\t.split(', ')\n\t\t.map(x => parseInt(x));\n\t\n\treturn { R : cssRgb[0], G : cssRgb[1], B : cssRgb[2] }\n}\n\n// Show/hide header after scrolling\nwindow.addEventListener('scroll', (event) => {\n\tif (window.scrollY > (window.innerHeight*0.6)) document.getElementById('control-panel').style.transform = 'translateY(0)';\n\telse document.getElementById('control-panel').style.transform = 'translateY(-100%)';    \n}, false);\n\n\n// WEBPACK FOOTER //\n// ./scripts/script.js"],"sourceRoot":""}